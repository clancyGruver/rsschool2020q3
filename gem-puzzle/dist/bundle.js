(()=>{"use strict";(()=>{function t(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var r=[],o=!0,i=!1,n=void 0;try{for(var a,s=t[Symbol.iterator]();!(o=(a=s.next()).done)&&(r.push(a.value),!e||r.length!==e);o=!0);}catch(t){i=!0,n=t}finally{try{o||null==s.return||s.return()}finally{if(i)throw n}}return r}}(t,e)||o(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function e(t){return(e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function r(t){return function(t){if(Array.isArray(t))return i(t)}(t)||function(t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t))return Array.from(t)}(t)||o(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function o(t,e){if(t){if("string"==typeof t)return i(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?i(t,e):void 0}}function i(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,o=new Array(e);r<e;r++)o[r]=t[r];return o}function n(o,i,n,a){var s,l,c=null,u=["draggable","value","id","placeholder","cols","rows","autocorrect","spellcheck","src"];try{c=document.createElement(o)}catch(t){throw new Error("Unable to create HTML element ".concat(o))}i&&(Array.isArray(i)?(s=c.classList).add.apply(s,r(i)):(l=c.classList).add.apply(l,r(i.split(" ")))),n&&Array.isArray(n)?n.forEach((function(t){return t&&c.append(t)})):n&&"object"===e(n)?c.append(n):n&&"string"==typeof n&&(c.innerHTML=n),a&&a.appendChild(c);for(var h=arguments.length,d=new Array(h>4?h-4:0),v=4;v<h;v++)d[v-4]=arguments[v];return d.length&&d.forEach((function(e){var r=t(e,2),o=r[0],i=r[1];""===i?c.setAttribute(o,""):u.includes(o)?c.setAttribute(o,i):c.dataset[o]=i})),c}function a(t,e){for(var r=0;r<e.length;r++){var o=e[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var s=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.boardSize=e,this.fieldSizeButtons=[],this.optionButtons={},this.movesCount=0,this.sounds={}}var e,r,o;return e=t,o=[{key:"createIcon",value:function(t){return n("i","material-icons",t)}},{key:"createTimeFromSeconds",value:function(e){var r=parseInt(e,10),o=Math.floor(r/60);return r%=60,{minutes:t.addZero(o),seconds:t.addZero(r)}}},{key:"addZero",value:function(t){return parseInt(t,10)<10?"0".concat(t):t}}],(r=[{key:"init",value:function(){document.body.prepend(this.createHeader(),this.createMainContent(),this.createFooter(),this.createSound())}},{key:"setBoardSize",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;t&&(this.boardSize=t),this.statisticsFieldSize.textContent="".concat(this.boardSize," X ").concat(this.boardSize)}},{key:"createHeader",value:function(){var t=this.createStatistics(),e=this.createOptions(),r=n("h1","header__caption");r.textContent="gem puzzle";var o=n("div","header__container",[r,e,t]);return n("header","header",o)}},{key:"createMainContent",value:function(){var t=n("div","container"),e=n("main","main",t);return this.mainContent=t,e}},{key:"createFooter",value:function(){for(var t=3;t<9;t+=1){var e=[["type","button"],["size",t]],r=n.apply(void 0,["button","field__list--btn",null,null].concat(e));r.textContent="".concat(t," X ").concat(t),this.fieldSizeButtons[t]=n("li","field__list--element",r)}var o=n("div","field__list",this.fieldSizeButtons),i=n("div","footer__container",o);return n("footer","footer",i)}},{key:"setScore",value:function(t){this.score.textContent=t}},{key:"createOptions",value:function(){var e=this,r={new:"replay",save:"save_alt",load:"publish",results:"receipt",sound:"music_note",solve:"done_outline"},o=Object.keys(r).map((function(o){var i=[["type","button"],["id",o]],a=n.apply(void 0,["button","field__list--btn",null,null].concat(i)),s=r[o];return a.appendChild(t.createIcon(s)),e.optionButtons[o]=a,n("li","field__list--element",a)})),i=n("ul","field__list",o);return n("div","options",i)}},{key:"createStatistics",value:function(){var t=n("div","statistics__right-side",[this.createMoves(),this.createTimer(),this.createScore()]);this.statisticsFieldSize=n("h2","field-size");var e=n("div","statistics__left-side",this.statisticsFieldSize);return this.setBoardSize(),n("div","statistics",[e,t])}},{key:"createScore",value:function(){var t=n("span","score__text");return t.textContent="score",this.score=n("span","score__value"),n("div","score",[t,this.score])}},{key:"createMoves",value:function(){var t=n("span","moves__text");t.textContent="moves";var e=n("span","moves__move-count");return e.textContent="00",this.movesElement=e,n("div","moves",[t,e])}},{key:"createTimer",value:function(){var t=n("span","time__text");t.textContent="time ";var e=n("span","time__timer--minutes");e.textContent="00",this.minutesContainer=e;var r=n("span","time__timer--seconds");r.textContent="00",this.secondsContainer=r;var o=n("span","time__timer--colon");o.textContent=":";var i=n("div","time__timer",[e,o,r]);return n("div","time",[t,i])}},{key:"getMoves",value:function(){return this.movesCount}},{key:"getTime",value:function(){return"".concat(this.minutesContainer.textContent,":").concat(this.secondsContainer.textContent)}},{key:"setTime",value:function(e){var r=t.createTimeFromSeconds(e),o=r.minutes,i=r.seconds;this.minutesContainer.textContent=o,this.secondsContainer.textContent=i}},{key:"setMoves",value:function(e){this.movesElement.textContent=t.addZero(e)}},{key:"getFieldSizeButtons",value:function(){return this.fieldSizeButtons}},{key:"createSound",value:function(){var t="./assets/sounds/",e=n("div","sound-container");return this.sounds.move=n("audio","",null,e,["src","".concat(t,"move.mp3")]),this.sounds.applause=n("audio","",null,e,["src","".concat(t,"applause.wav")]),e}}])&&a(e.prototype,r),o&&a(e,o),t}();const l=function(t,e){var r=parseInt(t,10),o=parseInt(e,10);if(!Number.isInteger(r)||!Number.isInteger(o))throw new Error("Irregular input");return Math.floor(Math.random()*(e-t+1))+t};function c(t,e){for(var r=0;r<e.length;r++){var o=e[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var u=function(){function t(e,r,o,i,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.value=e,this.state=r,this.emptyRow=o,this.emptyCol=i,this.moves=n,this.size=this.state.length,this.hash=this.toString(),this.path=""}var e,r;return e=t,(r=[{key:"toString",value:function(){var t="";return this.state.forEach((function(e){e.forEach((function(e){t="".concat(t,",").concat(e)}))})),t.slice(1)}},{key:"getClonedState",value:function(){return JSON.parse(JSON.stringify(this.state))}}])&&c(e.prototype,r),t}();function h(t){return function(t){if(Array.isArray(t))return d(t)}(t)||function(t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t))return Array.from(t)}(t)||function(t,e){if(t){if("string"==typeof t)return d(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?d(t,e):void 0}}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function d(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,o=new Array(e);r<e;r++)o[r]=t[r];return o}function v(t,e){for(var r=0;r<e.length;r++){var o=e[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var f=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t)}var e,r;return e=t,r=[{key:"getManhattanDistance",value:function(e,r){var o=0;return e.forEach((function(e,i){e.forEach((function(e,n){var a={x:i,y:n},s=t.getGoalPosition(e,r);o+=t.manhattan(a,s)}))})),o}},{key:"getGoalPosition",value:function(t,e){for(var r=e.length,o=0;o<r;o+=1)for(var i=0;i<r;i+=1)if(e[o][i]===t)return{x:o,y:i};return!1}},{key:"manhattan",value:function(t,e){return Math.abs(t.x-e.x)+Math.abs(t.y-e.y)}},{key:"linearConflict",value:function(e){for(var r=0,o=e.length,i=t.getSolvedArrays(o),n=0;n<o;n+=1){var a=h(e[n]),s=t.getColCandidate(e,n);r+=t.countConflicts(a,i.rows[n],o),r+=t.countConflicts(s,i.cols[n],o)}return r}},{key:"getSolvedArrays",value:function(t){for(var e={rows:[],cols:[]},r=function(r){e.rows[r]=h(Array(t).keys()).map((function(e){return r*t+e+1})),e.cols[r]=h(Array(t).keys()).map((function(e){return r+1+e*t})),r===t-1&&(e.rows[r][t-1]="icon",e.cols[r][t-1]="icon")},o=0;o<t;o+=1)r(o);return e}},{key:"getColCandidate",value:function(t,e){return h(Array(t.size).keys()).map((function(r){return t[r][e]}))}},{key:"countConflicts",value:function(t,e,r){for(var o=0,i=0;i<r;i+=1){var n=t[i];if(e.includes(n))for(var a=i+1;a<r;a+=1){var s=t[a];if(e.includes(s)){var l=e.indexOf(n),c=e.indexOf(s);n>s&&i<a&&l>c&&(o+=2)}}}return o}}],null&&v(e.prototype,null),r&&v(e,r),t}();function y(t,e){for(var r=0;r<e.length;r++){var o=e[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var m=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.items=[]}var e,r;return e=t,(r=[{key:"swap",value:function(t,e){var r=[this.items[e],this.items[t]];this.items[t]=r[0],this.items[e]=r[1]}},{key:"bubbleUp",value:function(){for(var t=this.size()-1;t>0;){var e=Math.floor((t-1)/2);if(!(this.items[e].value>this.items[t].value))break;this.swap(e,t),t=e}}},{key:"bubbleDown",value:function(){for(var t=0,e=this.size(),r=this.items[0].value,o=!0;o;){var i=2*t+1,n=2*t+2,a=void 0,s=void 0,l=null;i<e&&(a=this.items[i].value)<r&&(l=i),n<e&&((s=this.items[n].value)<r&&null===l||s<a&&null!==l)&&(l=n),null===l?o=!1:(this.swap(t,l),t=l)}}},{key:"enqueue",value:function(t){this.items.push(t),this.bubbleUp()}},{key:"dequeue",value:function(){this.swap(0,this.size()-1);var t=this.items.pop();return this.items.length>1&&this.bubbleDown(),t}},{key:"isEmpty",value:function(){return 0===this.items.length}},{key:"size",value:function(){return this.items.length}},{key:"toString",value:function(){var t="";this.items.forEach((function(e){t="".concat(t,", ").concat(e)}))}}])&&y(e.prototype,r),t}();function p(t,e){for(var r=0;r<e.length;r++){var o=e[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var b=function(){function t(e,r,o){if(function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),e.state)this.initial=e;else{var i=t.findEmptyColRow(e,o);this.initial=new u(0,e,i.row,i.col,0)}if(r.state)this.goal=r;else{var n=t.findEmptyColRow(r,o);this.goal=new u(0,r,n.row,n.col,0)}this.empty=o,this.queue=new m,this.queue.enqueue(this.initial),this.visited=new Set}var e,r,o;return e=t,o=[{key:"findEmptyColRow",value:function(t,e){var r={col:-1,row:-1};return t.forEach((function(t,o){t.forEach((function(t,i){t===e&&(r.col=i,r.row=o)}))})),r}},{key:"validMoves",value:function(t,e,r){var o=[];return 0!==t&&o.push("L"),t<r-1&&o.push("R"),0!==e&&o.push("T"),e<r-1&&o.push("B"),o}},{key:"oppositeMoves",value:function(t,e){var r=!1;return"L"===t&&"R"===e&&(r=!0),"R"===t&&"L"===e&&(r=!0),"T"===t&&"B"===e&&(r=!0),"B"===t&&"T"===e&&(r=!0),r}}],(r=[{key:"execute",value:function(){for(this.visited.add(this.initial.hash);this.queue.size()>0;){var t=this.queue.dequeue();if(t.hash===this.goal.hash)return t;this.expand(t)}return!1}},{key:"expand",value:function(e){var r=this,o=e.emptyCol,i=e.emptyRow,n=e.size,a=t.validMoves(o,i,n),s=e.path.split(""),l=s[s.length-1];l&&a.filter((function(e){return!t.oppositeMoves(e,l)})),a.forEach((function(t){var n=e.getClonedState(),a=i;"T"!==t&&"B"!==t||(a="T"===t?i-1:i+1);var s=o;"L"!==t&&"R"!==t||(s="L"===t?o-1:o+1);var l=n[a][s];n[a][s]=r.empty,n[i][o]=l;var c=new u(0,n,a,s,e.moves+1);return r.visited.has(c.hash)||(c.value=c.moves+r.heuristic(c),c.path="".concat(e.path).concat(t),r.queue.enqueue(c),r.visited.add(c.hash)),!0}))}},{key:"heuristic",value:function(t){return f.getManhattanDistance(t.state,this.goal.state)+f.linearConflict(t.state)}}])&&p(e.prototype,r),o&&p(e,o),t}();function g(t){return function(t){if(Array.isArray(t))return S(t)}(t)||function(t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t))return Array.from(t)}(t)||function(t,e){if(t){if("string"==typeof t)return S(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?S(t,e):void 0}}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function S(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,o=new Array(e);r<e;r++)o[r]=t[r];return o}function k(t,e){for(var r=0;r<e.length;r++){var o=e[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var w=function(){function t(e,r){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.boardSize=e,this.board=n("div","board animate"),this.movable={},this.movableElements={},this.cells={},this.boardHTML=[],this.boardArray=[],this.empty={row:-1,cell:-1,val:"icon"},this.makeDraggable(r)}var e,r,o;return e=t,o=[{key:"isIcon",value:function(t){return"icon"===t}}],(r=[{key:"init",value:function(t){this.setImage(t),this.newGame()}},{key:"createSolver",value:function(){this.solver=new b(this.boardArray,this.get2dVictoryArray(),"icon")}},{key:"emptyBoard",value:function(){this.board.innerHTML=""}},{key:"newGame",value:function(){this.createBoard(),this.boardRender(),this.updateCellBackground()}},{key:"updateBoardHTML",value:function(){for(var t=0;t<this.boardSize;t+=1)this.board.append(this.boardHTML[t])}},{key:"initBoardArray",value:function(){this.boardArray=[];for(var t=1,e=0;e<this.boardSize;e+=1){for(var r=[],o=0;o<this.boardSize;o+=1)e===this.boardSize-1&&o===this.boardSize-1?r.push("icon"):(r.push(t),t+=1);this.boardArray.push(r)}this.victoryArray=[].concat([])}},{key:"boardRender",value:function(){var t=this;this.emptyBoard(),this.boardArray.forEach((function(e,r){t.boardHTML[r]=n("div","board__row"),e.forEach((function(e,o){var i=[["row","".concat(r)],["cell","".concat(o)]],a=n.apply(void 0,["div","board__cell",null,t.boardHTML[r]].concat(i));if("icon"===e)a.classList.add("board__cell--disabled"),t.emptyCell=a;else{var s="".concat(r,"_").concat(o);if(Object.keys(t.movable).includes(s)){var l=t.movable[s];a.classList.add("board__cell--active"),a.dataset.position=t.movable[s],a.dataset.value=e,a.draggable=!0,t.movableElements[l]=a}a.textContent=e}t.cells[e]=a}))})),this.updateBoardHTML()}},{key:"updateBoard",value:function(){var t=this;this.movableElements={},this.boardArray.forEach((function(e,r){e.forEach((function(e,o){var i=t.cells[e];if(i.style.top=0,i.style.left=0,"icon"===e)t.emptyCell=i;else{var n="".concat(r,"_").concat(o);if(Object.keys(t.movable).includes(n)){var a=t.movable[n];i.classList.add("board__cell--active"),i.dataset.position=a,i.draggable=!0,t.movableElements[a]=i}else i.classList.remove("board__cell--active"),i.draggable=!1;i.dataset.row=r,i.dataset.cell=o}t.boardHTML[r].appendChild(i)}))})),this.updateBoardHTML()}},{key:"setImage",value:function(t){this.image={src:t,img:n("img","actualImage",null,null,["src",t]),percent:100/this.boardSize}}},{key:"updateCellBackground",value:function(){for(var t=this.boardSize*this.boardSize,e=0;e<t-1;e+=1){var r="".concat(this.image.percent*(e%this.boardSize),"%"),o="".concat(this.image.percent*Math.floor(e/this.boardSize),"%");this.cells[e+1].style.backgroundImage="url(".concat(this.image.src,")"),this.cells[e+1].style.backgroundSize="".concat(5*(+this.boardSize+1),"rem"),this.cells[e+1].style.backgroundPositionX=r,this.cells[e+1].style.backgroundPositionY=o}}},{key:"createBoard",value:function(){this.initBoardArray(),this.randomize(),this.setEmptyCell()}},{key:"setEmptyCell",value:function(){for(var t=0;t<this.boardSize;t+=1)for(var e=0;e<this.boardSize;e+=1)this.boardArray[t][e]===this.empty.val&&(this.empty.row=t,this.empty.cell=e,this.updateMovableElements())}},{key:"disableMove",value:function(){this.movable={},this.movableElements={}}},{key:"updateMovableElements",value:function(){var t=parseInt(this.empty.row,10),e=parseInt(this.empty.cell,10);this.movable={},this.movable["".concat(t-1,"_").concat(e)]="top",this.movable["".concat(t+1,"_").concat(e)]="bottom",this.movable["".concat(t,"_").concat(e-1)]="left",this.movable["".concat(t,"_").concat(e+1)]="right"}},{key:"createShuffledArray",value:function(){for(var t=[],e=1,r=0;r<this.boardSize;r+=1)for(var o=0;o<this.boardSize;o+=1)r===this.boardSize-1&&o===this.boardSize-1?t.push("icon"):(t.push(e),e+=1);this.victoryArray=[].concat(t),this.boardArray=t;do{this.shuffle()}while(!this.isSolvable());var i=g(this.boardArray);this.boardArray=[];for(var n=0;n<this.boardSize;n+=1){for(var a=[],s=0;s<this.boardSize;s+=1)a.push(i[n*this.boardSize+s]);this.boardArray.push(a)}}},{key:"shuffle",value:function(){for(var t=[],e=g(this.boardArray);e.length>0;){var r=l(0,e.length-1),o=e.splice(r,1)[0];t.push(o)}this.boardArray=t}},{key:"move",value:function(t){var e=t,r=e.dataset,o=r.row,i=r.cell,n=r.position,a=this.boardArray[o][i];switch(n){case"left":this.emptyCell.style.left="-56px",e.style.left="56px";break;case"right":this.emptyCell.style.left="56px",e.style.left="-56px";break;case"top":this.emptyCell.style.top="-56px",e.style.top="56px";break;case"bottom":this.emptyCell.style.top="56px",e.style.top="-56px"}this.boardArray[o][i]="icon",this.boardArray[this.empty.row][this.empty.cell]=a,this.empty.row=o,this.empty.cell=i}},{key:"setSize",value:function(t){this.boardSize=t}},{key:"setBoardArray",value:function(t){this.boardArray=t,this.setEmptyCell(),this.boardRender()}},{key:"isSolvable",value:function(){for(var t,e=0,r=this.boardSize*this.boardSize,o=(t=[]).concat.apply(t,g(this.boardArray)),i=0;i<r;i+=1)if("icon"===o[i])e+=Math.floor(i/this.boardSize)+1;else for(var n=0;n<i;n+=1)e+=o[n]>o[i]?1:0;return e%2==0}},{key:"get2dVictoryArray",value:function(){this.victoryArray=[];for(var t=0;t<this.boardSize;t+=1){for(var e=[],r=0;r<this.boardSize;r+=1)e.push(t*this.boardSize+r+1);this.victoryArray.push(e)}return this.victoryArray[this.boardSize-1][this.boardSize-1]="icon",this.victoryArray}},{key:"createVictoryArray",value:function(){this.victoryArray=[];for(var t=0;t<this.boardSize;t+=1){for(var e=[],r=0;r<this.boardSize;r+=1)e.push(t*this.boardSize+r+1);this.victoryArray.push(e)}this.victoryArray[this.boardSize-1][this.boardSize-1]="icon"}},{key:"isSolved",value:function(){var t,e;this.victoryArray&&0!==this.victoryArray.length||this.createVictoryArray();for(var r=(t=[]).concat.apply(t,g(this.victoryArray)),o=(e=[]).concat.apply(e,g(this.boardArray)),i=this.boardSize*this.boardSize,n=0;n<i;n+=1)if(r[n]!==o[n])return!1;return!0}},{key:"makeDraggable",value:function(t){var e=this;this.board.addEventListener("dragstart",(function(t){e.draggedCell=t.target,setTimeout((function(){t.target.style.fontSize=0}),0)})),this.board.addEventListener("dragend",(function(){e.emptyCell===e.dragOverElement&&t({target:e.draggedCell}),e.draggedCell=null})),this.board.addEventListener("dragover",(function(t){t.preventDefault();var r=t.target;e.dragOverElement=r}))}},{key:"setBoardSize",value:function(t){this.boardSize=t}},{key:"randomize",value:function(){var t=Math.pow(this.boardSize,3);this.empty.row=this.boardSize-1,this.empty.col=this.boardSize-1;for(var e=null,r=0;r<t;r+=1){var o=this.validMoves();null!==e&&o.includes(e)&&o.splice(o.indexOf(e),1);var i=l(0,o.length-1),n=void 0,a=void 0;switch(o[i]){case"Up":n=this.empty.row-1,this.boardArray[this.empty.row][this.empty.col]=this.boardArray[n][this.empty.col],this.boardArray[n][this.empty.col]=this.empty.val,this.empty.row=n;break;case"Down":n=this.empty.row+1,this.boardArray[this.empty.row][this.empty.col]=this.boardArray[n][this.empty.col],this.boardArray[n][this.empty.col]=this.empty.val,this.empty.row=n;break;case"Left":a=this.empty.col-1,this.boardArray[this.empty.row][this.empty.col]=this.boardArray[this.empty.row][a],this.boardArray[this.empty.row][a]=this.empty.val,this.empty.col=a;break;case"Right":a=this.empty.col+1,this.boardArray[this.empty.row][this.empty.col]=this.boardArray[this.empty.row][a],this.boardArray[this.empty.row][a]=this.empty.val,this.empty.col=a}e=o[i]}}},{key:"validMoves",value:function(){var t=this.empty,e=t.row,r=t.col,o=[];return 0!==r&&o.push("Left"),r<this.boardSize-1&&o.push("Right"),0!==e&&o.push("Up"),e<this.boardSize-1&&o.push("Down"),o}}])&&k(e.prototype,r),o&&k(e,o),t}();function _(t,e){window.localStorage.setItem(t,JSON.stringify(e))}function C(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;return JSON.parse(window.localStorage.getItem(t)||e)}function A(t){return Boolean(window.localStorage.getItem(t))}function z(t){return(z="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function E(t,e){for(var r=0;r<e.length;r++){var o=e[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var L=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.header=null,this.modalText=null,this.modal=null}var e,r;return e=t,(r=[{key:"init",value:function(){var t=this;this.modal=n("div","modal"),this.modal.addEventListener("click",(function(e){e.target.closest(".modal__window")||t.close()}));var e=n("div","modal__window",null,this.modal);this.modalContainer=n("div","modal__window--container",null,e),this.createHeader(),this.createBody(),this.createFooter()}},{key:"confirm",value:function(t,e){var r=this,o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;this.header.textContent=t,this.body.textContent=e,this.modalContainer.appendChild(this.footer),document.body.appendChild(this.modal),this.confirmBtn.addEventListener("click",(function(){r.close(),"function"==typeof o&&o()})),this.dismissBtn.addEventListener("click",(function(){r.close(),"function"==typeof i&&i()}))}},{key:"show",value:function(t,e){this.header.textContent=t,z(e)===z("")?this.body.textContent=e:(this.body.textContent="",this.body.appendChild(e)),this.modalContainer.querySelector(".modal__window__footer")&&this.modalContainer.removeChild(this.footer),document.body.appendChild(this.modal)}},{key:"createHeader",value:function(){var t=this,e=n("div","modal__window__header",null,this.modalContainer);this.header=n("h3","modal__window__header--caption",null,e);var r=n("span","modal__window__header--close",null,e);r.innerHTML="&times",r.addEventListener("click",(function(){return t.close()}))}},{key:"createBody",value:function(){var t=n("div","modal__window__body",null,this.modalContainer);this.body=n("p","modal__window__body--content",null,t)}},{key:"createFooter",value:function(){this.footer=n("div","modal__window__footer"),this.confirmBtn=n("button","modal__window__footer__btn confirm",null,this.footer,["type","button"]),this.confirmBtn.textContent="V",this.dismissBtn=n("button","modal__window__footer__btn dismiss",null,this.footer,["type","button"]),this.dismissBtn.textContent="X"}},{key:"close",value:function(){document.body.removeChild(this.modal)}}])&&E(e.prototype,r),t}();function B(t,e){return e[t%100>4&&t%100<20?2:[2,0,1,1,1,2][t%10<5?t%10:5]]}function x(t,e){for(var r=0;r<e.length;r++){var o=e[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var T=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t)}var e,r;return e=t,(r=[{key:"init",value:function(){this.main=n("div","record"),this.tableContainer=n("div","record__table",null,this.main),this.createHeader(),this.createBody()}},{key:"createHeader",value:function(){var t=n("div","record__table--header",null,this.tableContainer),e=n("div","record__table--cell",null,t),r=n("div","record__table--cell",null,t),o=n("div","record__table--cell",null,t);e.textContent="очки",r.textContent="время",o.textContent="ходов"}},{key:"createBody",value:function(){this.body=n("div","record__table--list",null,this.tableContainer)}},{key:"createRow",value:function(t){var e=n("div","record__table--cell");e.textContent=t.score;var r=n("div","record__table--cell");r.textContent=t.time;var o=n("div","record__table--cell");o.textContent=t.movesCount,n("div","record__table--row",[e,r,o],this.body)}},{key:"setResults",value:function(t){var e=this;return!!Array.isArray(t)&&(t.forEach((function(t){null!==t&&e.createRow(t)})),!0)}},{key:"getTable",value:function(){return this.main}},{key:"clearBoard",value:function(){this.body.innerHTML=""}}])&&x(e.prototype,r),t}();function I(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,o=new Array(e);r<e;r++)o[r]=t[r];return o}function M(t,e){for(var r=0;r<e.length;r++){var o=e[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var O=new(function(){function t(e){var r=this;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t);var o=parseInt(e,10)||4;o<3&&(o=3),o>8&&(o=8),this.boardSize=o,this.movesCount=0,this.isVictory=!1,this.isAutoSolved=!1,this.moveHandler=function(t){return r.move(t)}}var e,r;return e=t,(r=[{key:"init",value:function(){var t=this;this.setRandomImage(),this.pageLayout=new s(this.boardSize),this.pageLayout.init(),this.board=new w(this.boardSize,(function(e){return t.move(e)})),this.board.init(this.image),this.pageLayout.mainContent.appendChild(this.board.board),this.modal=new L,this.modal.init(),this.setScore(),this.isSoundOn=!0,A("previousGame")&&this.modal.confirm("Found saved game","Do you want to load previous game?",(function(){return t.loadGame()})),this.results=new T,this.results.init(),this.pageLayout.optionButtons.new.addEventListener("click",(function(){return t.newGame()})),this.pageLayout.optionButtons.save.addEventListener("click",(function(){return t.saveGame()})),this.pageLayout.optionButtons.load.addEventListener("click",(function(){return t.loadGame()})),this.pageLayout.optionButtons.results.addEventListener("click",(function(){return t.showResults()})),this.pageLayout.optionButtons.sound.addEventListener("click",(function(){return t.toggleSound()})),this.pageLayout.optionButtons.solve.addEventListener("click",(function(){return t.solve()}));var e=this.pageLayout.getFieldSizeButtons();Object.keys(e).forEach((function(r){e[r].addEventListener("click",(function(e){t.changeBoardSize(e)}))})),this.movableElements(),this.startTimer()}},{key:"setRandomImage",value:function(){this.image="./assets/images/box/".concat(l(1,150),".jpg")}},{key:"solve",value:function(){var t=this,e=new Date,r={T:"top",B:"bottom",L:"left",R:"right"};this.isAutoSolved=!0,this.board.createSolver();var o=this.board.solver.execute(),i=(new Date-e)/1e3,n=o.moves,a=B(n,["ход","хода","ходов"]),s=o.path.split("");this.solverIntervalId=setInterval((function(){var e=s.shift(),o=r[e];if(t.board.movableElements[o].click(),0===s.length){clearInterval(t.solverIntervalId);var l="Поиск решения занял ".concat(i," секунд и составил ").concat(n," ").concat(a,".");t.modal.show("SOLVED!",l)}}),280)}},{key:"newGame",value:function(){this.isVictory=!1,this.setRandomImage(),this.board.setImage(this.image),this.board.newGame(),this.startTimer(),this.setMoves(0),this.setScore(),this.pageLayout.setMoves(this.movesCount),this.board.updateBoard(),this.movableElements()}},{key:"saveGame",value:function(){_("previousGame",{board:this.board.boardArray,boardSize:this.boardSize,time:this.timer,moves:this.movesCount,image:this.image,score:this.score})}},{key:"loadGame",value:function(){this.isVictory=!1;var t=C("previousGame");this.boardSize=t.boardSize,this.board.setSize(this.boardSize),this.board.setImage(t.image),this.pageLayout.setBoardSize(this.boardSize),this.startTimer(t.time),this.setMoves(t.moves),this.pageLayout.setMoves(this.movesCount),this.score=t.score,this.pageLayout.setScore(t.score),this.board.setBoardArray(t.board),this.movableElements(),this.board.updateCellBackground(),this.board.createVictoryArray()}},{key:"toggleSound",value:function(){this.isSoundOn=!this.isSoundOn;var t=this.isSoundOn?"music_note":"music_off";this.pageLayout.optionButtons.sound.innerHTML="",this.pageLayout.optionButtons.sound.append(s.createIcon(t))}},{key:"move",value:function(t){var e=this;return!t.target.closest("board__cell--disabled")&&"img"!==t.target.tagName&&(this.board.move(t.target),this.isSoundOn&&(this.pageLayout.sounds.move.currentTime=0,this.pageLayout.sounds.move.play()),this.increaseMoves(),this.pageLayout.setMoves(this.movesCount),this.decreaseScore(),this.pageLayout.setScore(this.score),this.board.isSolved()?(this.victory(),this.board.disableMove()):this.board.updateMovableElements(),setTimeout((function(){e.board.updateBoard(),e.movableElements()}),250),!0)}},{key:"movableElements",value:function(){var t=this;this.movable=document.querySelectorAll(".board__cell--active"),Array.from(document.querySelectorAll(".board__cell")).forEach((function(e){return e.removeEventListener("click",t.moveHandler)})),Array.from(this.movable).forEach((function(e){return e.addEventListener("click",t.moveHandler)}))}},{key:"stopTimer",value:function(){clearInterval(this.timerID)}},{key:"startTimer",value:function(t){var e=this;this.timer=t||0,this.timerClick(0),this.timerID&&clearInterval(this.timerID),this.timerID=setInterval((function(){return e.timerClick()}),1e3)}},{key:"timerClick",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;this.pageLayout.setTime(t||this.timer),this.decreaseScore(),this.pageLayout.setScore(this.score),this.timer+=1}},{key:"decreaseScore",value:function(){this.score<=0?this.score=0:this.score-=1}},{key:"victory",value:function(){if(this.isVictory=!0,this.stopTimer(),!this.isAutoSolved){var t=this.pageLayout.getTime(),e=this.movesCount,r=B(e,["ход","хода","ходов"]),o=B(this.score,["очко","очка","очков"]);this.isSoundOn&&(this.pageLayout.sounds.applause.currentTime=0,this.pageLayout.sounds.applause.play()),this.modal.show("VICTORY!","Ура! Вы решили головоломку за ".concat(t," и ").concat(e," ").concat(r,". Ваш счет ").concat(this.score," ").concat(o)),this.saveResults(t)}}},{key:"saveResults",value:function(t){var e,r=this,o={time:t,movesCount:this.movesCount,score:this.score},i=[];A("gemPuzzleResults")&&(i=C("gemPuzzleResults"));for(var n=i.sort((function(t,e){var r=0;return t.score>e.score&&(r=-1),t.score===e.score&&(r=0),t.score<e.score&&(r=1),r})),a=n.findIndex((function(t){return null===t||t.score<r.score})),s=function(t){if(Array.isArray(t))return I(t)}(e=n)||function(t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t))return Array.from(t)}(e)||function(t,e){if(t){if("string"==typeof t)return I(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?I(t,e):void 0}}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),l=a;l<=10;l+=1)n[l+1]=s[l];a>=0?n[a]=o:i.unshift(o),n.length=10,_("gemPuzzleResults",i)}},{key:"showResults",value:function(){var t=[];A("gemPuzzleResults")&&(t=C("gemPuzzleResults")),this.results.clearBoard(),this.results.setResults(t.sort((function(t,e){var r=0;return t.score>e.score&&(r=-1),t.score===e.score&&(r=0),t.score<e.score&&(r=1),r}))),this.modal.show("board of leaders",this.results.getTable())}},{key:"changeBoardSize",value:function(t){var e=t.target.dataset.size;this.boardSize=e,this.pageLayout.setBoardSize(e),this.board.setBoardSize(e),this.newGame()}},{key:"setScore",value:function(){var t=0;switch(+this.boardSize){case 3:t=200;break;case 4:t=400;break;case 5:t=800;break;case 6:t=1600;break;case 7:t=3200;break;case 8:t=6400}this.score=t,this.pageLayout.setScore(this.score)}},{key:"setMoves",value:function(t){this.movesCount=t}},{key:"increaseMoves",value:function(){this.movesCount+=1}}])&&M(e.prototype,r),t}());document.addEventListener("DOMContentLoaded",(function(){return O.init()}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,