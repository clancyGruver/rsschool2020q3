(()=>{"use strict";(()=>{function i(i,t){return function(i){if(Array.isArray(i))return i}(i)||function(i,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(i)){var n=[],a=!0,e=!1,r=void 0;try{for(var o,u=i[Symbol.iterator]();!(a=(o=u.next()).done)&&(n.push(o.value),!t||n.length!==t);a=!0);}catch(i){e=!0,r=i}finally{try{a||null==u.return||u.return()}finally{if(e)throw r}}return n}}(i,t)||a(i,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function t(i){return(t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(i){return typeof i}:function(i){return i&&"function"==typeof Symbol&&i.constructor===Symbol&&i!==Symbol.prototype?"symbol":typeof i})(i)}function n(i){return function(i){if(Array.isArray(i))return e(i)}(i)||function(i){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(i))return Array.from(i)}(i)||a(i)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function a(i,t){if(i){if("string"==typeof i)return e(i,t);var n=Object.prototype.toString.call(i).slice(8,-1);return"Object"===n&&i.constructor&&(n=i.constructor.name),"Map"===n||"Set"===n?Array.from(i):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?e(i,t):void 0}}function e(i,t){(null==t||t>i.length)&&(t=i.length);for(var n=0,a=new Array(t);n<t;n++)a[n]=i[n];return a}function r(a,e,r,o){var u,s,c=null,l=["draggable","value","id","placeholder","cols","rows","autocorrect","spellcheck","src","type","for"];try{c=document.createElement(a)}catch(i){throw new Error("Unable to create HTML element ".concat(a))}e&&(Array.isArray(e)?(u=c.classList).add.apply(u,n(e)):(s=c.classList).add.apply(s,n(e.split(" ")))),r&&Array.isArray(r)?r.forEach((function(i){return i&&c.append(i)})):r&&"object"===t(r)?c.append(r):r&&"string"==typeof r&&(c.innerHTML=r),o&&o.appendChild(c);for(var d=arguments.length,m=new Array(d>4?d-4:0),g=4;g<d;g++)m[g-4]=arguments[g];return m.length&&m.forEach((function(t){var n=i(t,2),a=n[0],e=n[1];""===e?c.setAttribute(a,""):l.includes(a)?c.setAttribute(a,e):c.dataset[a]=e})),c}function o(i,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(i,a.key,a)}}var u=function(){function i(t){!function(i,t){if(!(i instanceof t))throw new TypeError("Cannot call a class as a function")}(this,i),this.cardElement=r("div","card-container"),this.imageContainer=r("div","card-image",null,this.card),this.image=r("img","",null,this.imageContainer,["src","".concat("./assets/").concat(t.image||"img/boot.jpg")],["alt",t.word||"boot"]),this.descriptionContainer=r("div","card-description",null,this.card),this.description=r("strong","",null,this.descriptionContainer),this.description.textContent=t.word||"boot"}var t,n;return t=i,(n=[{key:"card",get:function(){return this.cardElement}}])&&o(t.prototype,n),i}();function s(i,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(i,a.key,a)}}var c={MAIN:function(){function i(){!function(i,t){if(!(i instanceof t))throw new TypeError("Cannot call a class as a function")}(this,i),this.name="main page",this.contentVal=[]}var t,n;return t=i,(n=[{key:"init",value:function(i){this.content=i.map((function(i){return new u(i)}))}},{key:"content",get:function(){return this.contentVal},set:function(i){var t=this;i.forEach((function(i){t.contentVal.push(i.card)}))}}])&&s(t.prototype,n),i}(),CATEGORY:"category",STATS:"stats"};const l={"Action (set A)":[{word:"cry",translation:"плакать",image:"img/cry.jpg",audioSrc:"audio/cry.mp3"},{word:"dance",translation:"танцевать",image:"img/dance.jpg",audioSrc:"audio/dance.mp3"},{word:"dive",translation:"нырять",image:"img/dive.jpg",audioSrc:"audio/dive.mp3"},{word:"draw",translation:"рисовать",image:"img/draw.jpg",audioSrc:"audio/draw.mp3"},{word:"fish",translation:"ловить рыбу",image:"img/fish.jpg",audioSrc:"audio/fish.mp3"},{word:"fly",translation:"летать",image:"img/fly.jpg",audioSrc:"audio/fly.mp3"},{word:"hug",translation:"обнимать",image:"img/hug.jpg",audioSrc:"audio/hug.mp3"},{word:"jump",translation:"прыгать",image:"img/jump.jpg",audioSrc:"audio/jump.mp3"}],"Action (set B)":[{word:"open",translation:"открывать",image:"img/open.jpg",audioSrc:"audio/open.mp3"},{word:"play",translation:"играть",image:"img/play.jpg",audioSrc:"audio/play.mp3"},{word:"point",translation:"указывать",image:"img/point.jpg",audioSrc:"audio/point.mp3"},{word:"ride",translation:"ездить",image:"img/ride.jpg",audioSrc:"audio/ride.mp3"},{word:"run",translation:"бегать",image:"img/run.jpg",audioSrc:"audio/run.mp3"},{word:"sing",translation:"петь",image:"img/sing.jpg",audioSrc:"audio/sing.mp3"},{word:"skip",translation:"пропускать, прыгать",image:"img/skip.jpg",audioSrc:"audio/skip.mp3"},{word:"swim",translation:"плавать",image:"img/swim.jpg",audioSrc:"audio/swim.mp3"}],"Animal (set A)":[{word:"cat",translation:"кот",image:"img/cat.jpg",audioSrc:"audio/cat.mp3"},{word:"chick",translation:"цыплёнок",image:"img/chick.jpg",audioSrc:"audio/chick.mp3"},{word:"chicken",translation:"курица",image:"img/chicken.jpg",audioSrc:"audio/chicken.mp3"},{word:"dog",translation:"собака",image:"img/dog.jpg",audioSrc:"audio/dog.mp3"},{word:"horse",translation:"лошадь",image:"img/horse.jpg",audioSrc:"audio/horse.mp3"},{word:"pig",translation:"свинья",image:"img/pig.jpg",audioSrc:"audio/pig.mp3"},{word:"rabbit",translation:"кролик",image:"img/rabbit.jpg",audioSrc:"audio/rabbit.mp3"},{word:"sheep",translation:"овца",image:"img/sheep.jpg",audioSrc:"audio/sheep.mp3"}],"Animal (set B)":[{word:"bird",translation:"птица",image:"img/bird.jpg",audioSrc:"audio/bird.mp3"},{word:"fish",translation:"рыба",image:"img/fish1.jpg",audioSrc:"audio/fish.mp3"},{word:"frog",translation:"жаба",image:"img/frog.jpg",audioSrc:"audio/frog.mp3"},{word:"giraffe",translation:"жирафа",image:"img/giraffe.jpg",audioSrc:"audio/giraffe.mp3"},{word:"lion",translation:"лев",image:"img/lion.jpg",audioSrc:"audio/lion.mp3"},{word:"mouse",translation:"мышь",image:"img/mouse.jpg",audioSrc:"audio/mouse.mp3"},{word:"turtle",translation:"черепаха",image:"img/turtle.jpg",audioSrc:"audio/turtle.mp3"},{word:"dolphin",translation:"дельфин",image:"img/dolphin.jpg",audioSrc:"audio/dolphin.mp3"}],Clothes:[{word:"skirt",translation:"юбка",image:"img/skirt.jpg",audioSrc:"audio/skirt.mp3"},{word:"pants",translation:"брюки",image:"img/pants.jpg",audioSrc:"audio/pants.mp3"},{word:"blouse",translation:"блузка",image:"img/blouse.jpg",audioSrc:"audio/blouse.mp3"},{word:"dress",translation:"платье",image:"img/dress.jpg",audioSrc:"audio/dress.mp3"},{word:"boot",translation:"ботинок",image:"img/boot.jpg",audioSrc:"audio/boot.mp3"},{word:"shirt",translation:"рубашка",image:"img/shirt.jpg",audioSrc:"audio/shirt.mp3"},{word:"coat",translation:"пальто",image:"img/coat.jpg",audioSrc:"audio/coat.mp3"},{word:"shoe",translation:"туфли",image:"img/shoe.jpg",audioSrc:"audio/shoe.mp3"}],Emotions:[{word:"sad",translation:"грустный",image:"img/sad.jpg",audioSrc:"audio/sad.mp3"},{word:"angry",translation:"сердитый",image:"img/angry.jpg",audioSrc:"audio/angry.mp3"},{word:"happy",translation:"счастливый",image:"img/happy.jpg",audioSrc:"audio/happy.mp3"},{word:"tired",translation:"уставший",image:"img/tired.jpg",audioSrc:"audio/tired.mp3"},{word:"surprised",translation:"удивлённый",image:"img/surprised.jpg",audioSrc:"audio/surprised.mp3"},{word:"scared",translation:"испуганный",image:"img/scared.jpg",audioSrc:"audio/scared.mp3"},{word:"smile",translation:"улыбка",image:"img/smile.jpg",audioSrc:"audio/smile.mp3"},{word:"laugh",translation:"смех",image:"img/laugh.jpg",audioSrc:"audio/laugh.mp3"}]};function d(i,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(i,a.key,a)}}var m=function(){function i(t){!function(i,t){if(!(i instanceof t))throw new TypeError("Cannot call a class as a function")}(this,i),this.categories=t,this.menu=null,this.menuContainer=null,this.createHtmlContainer(),this.createMenu()}var t,n;return t=i,(n=[{key:"createHtmlContainer",value:function(){this.menu=r("nav","left-menu closed"),this.menuContainer=r("ul","left-menu",null,this.menu)}},{key:"createMenu",value:function(){var i=this;this.categories.forEach((function(t){r("li","menu-link",null,i.menuContainer).textContent=t}))}}])&&d(t.prototype,n),i}();function g(i,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(i,a.key,a)}}var p=function(){function i(){!function(i,t){if(!(i instanceof t))throw new TypeError("Cannot call a class as a function")}(this,i),this.header=r("header","header"),this.headerContainer=r("div","container",null,this.header),this.createBurgerMenu(),this.createName(),this.createSwitch()}var t,n;return t=i,(n=[{key:"createBurgerMenu",value:function(){var i=r("div","burger",null,this.headerContainer);r("div","bar1",null,i),r("div","bar2",null,i),r("div","bar3",null,i)}},{key:"createName",value:function(){r("h1","",null,this.headerContainer).textContent="english for kids"}},{key:"createSwitch",value:function(){this.switch=r("input","",null,this.headerContainer,["type","checkbox"],["id","lol-checkbox"]),this.button=r("label","",null,this.headerContainer,["for","lol-checkbox"],["id","button"]),this.button,(this.button,["id","play"]).textContent="Play",(this.button,["id","train"]).textContent="Train"}}])&&g(t.prototype,n),i}();function h(i,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(i,a.key,a)}}var f=function(){function i(){!function(i,t){if(!(i instanceof t))throw new TypeError("Cannot call a class as a function")}(this,i),this.footer=r("footer","footer"),this.footerContainer=r("div","container",null,this.footer),this.ul=r("ul","links",null,this.footerContainer),this.createGitHub(),this.createYear(),this.createRSS()}var t,n;return t=i,(n=[{key:"createGitHub",value:function(){var i=r("li","link",null,this.ul);r("a","",null,i,["href","https://github.com/clancyGruver"]),r("img","github-img",null,i,["src","./assets/img/iconmonstr-github-1.svg"],["alt","github"])}},{key:"createYear",value:function(){var i=r("li","link",null,this.ul);r("strong","",null,i).textContent="2020"}},{key:"createRSS",value:function(){var i=r("li","link",null,this.ul);r("a","",null,i,["href","https://rs.school/js/"]),r("img","rss-img",null,i,["src","./assets/img/rs_school_js.svg"],["alt","rs school"])}}])&&h(t.prototype,n),i}();function y(i,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(i,a.key,a)}}var b=function(){function i(){!function(i,t){if(!(i instanceof t))throw new TypeError("Cannot call a class as a function")}(this,i),this.main=r("main","main"),this.mainContainer=r("div","container",null,this.main)}var t,n;return t=i,(n=[{key:"content",set:function(i){var t=this;this.mainContainer.innerHtml="",Array.isArray(i)?(console.log(i),i.forEach((function(i){return t.mainContainer.append(i)}))):this.mainContainer.append(i)}}])&&y(t.prototype,n),i}();function w(i,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(i,a.key,a)}}var v=function(){function i(){!function(i,t){if(!(i instanceof t))throw new TypeError("Cannot call a class as a function")}(this,i),this.mode=1,this.cards=l,this.leftMenu=new m(Object.keys(l)),this.getCategories(),this.header=new p,this.footer=new f,this.main=new b,this.page=c.MAIN,this.createPage(),this.renderPage()}var t,n;return t=i,(n=[{key:"getCategories",value:function(){for(var i in this.categories=[],l){var t={image:l[i][0].image,word:i};this.categories.push(t)}}},{key:"createPage",value:function(){document.body.append(this.header.header),document.body.append(this.leftMenu.menu),document.body.append(this.main.main),document.body.append(this.footer.footer)}},{key:"renderPage",value:function(){var i=new this.page;"main page"===i.name&&i.init(this.categories),this.main.content=i.content}}])&&w(t.prototype,n),i}();document.addEventListener("DOMContentLoaded",(function(){new v}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,