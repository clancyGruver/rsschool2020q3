{"version":3,"sources":["styles/Footer.module.css","styles/Countries.module.css","components/Switch.js","components/ParamSelect.js","assets/images/icon.png","components/Header.js","components/CountriesList.js","assets/images/tofullscreen.svg","assets/images/minimize.svg","components/FullScreen.js","components/Countries.js","components/Chart.js","components/Statistics.js","components/MapLegend.js","components/Map.js","assets/images/iconmonstr-github-1.svg","assets/images/rs_school_js.svg","components/Footer.js","App.js","index.js","styles/Switch.module.css","styles/Header.module.css","styles/FullScreen.module.css","styles/ParamSelect.module.css"],"names":["module","exports","Switch","className","Style","pl0","this","props","description","formCheckInputCustom","type","checked","value","onChange","handleClick","React","Component","ParamSelect","handleSelect","bind","e","key","target","setShowingParam","Object","keys","params","map","el","selectedParam","appKey","wa","disabled","createSelectOptions","Header","state","name","addZero","num","date","month","getUTCMonth","getUTCFullYear","getUTCDate","headerCustom","src","icon","alt","formatDate","period","people","CountriesList","propSlug","selectedCountry","Slug","updateCountry","Country","countries","flag","CountryCode","selectedSlug","active","onClick","liClickHandler","smallHeader","per100","per100Fn","dataKey","overflow","createLi","FullScreen","isFullScreen","rowElement","changeClass","closest","setState","classList","toggle","startsWith","Minimize","clickHandler","ToFullScreen","Countries","searchString","searchHandler","sortParam","data","sort","a","b","aVal","filter","toLowerCase","includes","h80","mb6","id","aria-hidden","placeholder","aria-label","aria-describedby","sortData","Chart","chartData","labels","datasets","label","values","backgroundColor","borderColor","borderWidth","options","scales","yAxes","ticks","beginAtZero","callback","index","xAxes","time","unit","displayFormats","week","distribution","Statistics","statisticValues","prefix","nameKeys","slice","length","rows","idx","scope","country","statisticTable","MapLegend","useMap","useEffect","legend","L","control","position","onAdd","from","to","d","div","DomUtil","create","grades","i","push","innerHTML","join","addTo","Map","colors","none","color","weight","fillColor","fillOpacity","low","medium","high","layer","toolTipVal","feature","properties","cases","paramName","bindTooltip","openTooltip","geometry","style","click","clickToFeature","mouseover","tooltipShow","flow","scaleValues","scaleParamIdx","currentScaleName","previousScaleName","countryNames","countryNamesArr","Array","isArray","markers","WorldData","features","forEach","marker","find","propName","slugEquals","countrySlug","nameEquals","countryName","MapContainer","center","zoom","height","minHeight","width","GeoJSON","getGeoJson","featureStyle","eventHandlers","mapHandlers","Math","random","toString","substr","Footer","footer","links","link","href","githubImg","GitHubIcon","rssImg","RSSIcon","App","url","periods","0","1","currentPeriod","peopleValues","currentPeopleValue","covidData","population","Confirmed","Deaths","Recovered","peopleVal","Date","graphValues","worldChartData","mapData","peopleChange","periodChange","Number","Boolean","updateData","paramKey","updateStatisticData","updateChartData","updateMapData","peopleCount","toFixed","minMaxCases","onePercent","max","min","floor","round","localCountries","getCaseValues","sortFunction","loadCountryChartData","parse","JSON","stringify","to100","chartVal","x","getTime","y","setDate","getDate","countryData","summaryData","Global","keyPrefix","res","slug","fetch","mode","response","json","result","Cases","endDate","startDate","toISOString","worldData","loadSummary","loadPopulation","loadWorldData","render","document","getElementById"],"mappings":"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","file":"static/js/main.fe80a8d6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__2XthG\",\"links\":\"Footer_links__1wRzy\",\"link\":\"Footer_link__15swr\",\"githubImg\":\"Footer_githubImg__1HzIs\",\"rssImg\":\"Footer_rssImg__2xgJ9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"smallHeader\":\"Countries_smallHeader__1MACr\",\"active\":\"Countries_active__1BmiE\",\"mb6\":\"Countries_mb6__2GfO3\",\"h80\":\"Countries_h80__1gXI6\",\"overflow\":\"Countries_overflow__2TZC2\"};","import React from 'react';\nimport Style from '../styles/Switch.module.css';\n\nexport default class Switch extends React.Component {\n  render() {\n    return (<div className={`${Style.pl0} form-check form-switch d-flex flex-row-invert`}>\n      <label className=\"form-check-label\">{this.props.description}</label>\n      <input className={`${Style.formCheckInputCustom} form-check-input`} type=\"checkbox\" checked={this.props.value} onChange={this.props.handleClick} />\n    </div>);\n  }\n}","import React from 'react';\nimport Style from '../styles/ParamSelect.module.css';\n\nexport default class ParamSelect extends React.Component{\n  constructor(props) {\n    super(props);\n    this.handleSelect = this.handleSelect.bind(this);\n  }\n\n  handleSelect(e) {\n    const key = e.target.value;\n    this.props.setShowingParam(key);\n  }\n\n  createSelectOptions() {\n    const paramKeys = Object.keys(this.props.params);\n    return paramKeys.map((el) => <option value={el} key={el}>\n      {this.props.params[el]}\n      </option>);\n  }\n\n  render() {\n    return (\n      <select\n        value={this.props.selectedParam.appKey}\n        className={`${Style.wa} form-select form-select-sm`}\n        onChange={this.handleSelect}\n      >\n        <option disabled>Параметр</option>\n        {this.createSelectOptions()}\n      </select>);\n  }\n}","export default __webpack_public_path__ + \"static/media/icon.a7e866c1.png\";","import React from 'react';\r\nimport Switch from './Switch';\r\nimport ParamSelect from './ParamSelect';\r\n\r\nimport icon from '../assets/images/icon.png';\r\nimport Style from '../styles/Header.module.css';\r\n\r\nexport default class Header extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: 'covid-19 dashboard',\r\n    };\r\n  }\r\n\r\n  formatDate() {\r\n    const addZero = (num)  => num * 1 < 10 ? `0${num}` : num;\r\n    const {date} = this.props;\r\n    const month = date.getUTCMonth() + 1;\r\n    return `${date.getUTCFullYear()}-${addZero(month)}-${addZero(date.getUTCDate())}`;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <header className={`${Style.headerCustom} header bg-light d-flex justify-content-center align-items-center`}>\r\n        <div className=\"container row\">\r\n          <div className=\"name col\">\r\n            <h2 className=\"text-uppercase\">\r\n                <img src={icon} alt=\"covid-19 dashboard icon\" className={Style.icon} />\r\n                {this.state.name}\r\n            </h2>\r\n            <h6>По состоянию на {this.formatDate()}</h6>\r\n          </div>\r\n          <div className=\"col d-flex flex-column align-items-end\">\r\n            <Switch\r\n              handleClick={this.props.period.handleClick}\r\n              value={this.props.period.value}\r\n              description={this.props.period.description}\r\n            />\r\n            <Switch\r\n              handleClick={this.props.people.handleClick}\r\n              value={this.props.people.value}\r\n              description={this.props.people.description}\r\n            />\r\n            <ParamSelect\r\n              params={this.props.params}\r\n              setShowingParam={this.props.setShowingParam}\r\n              selectedParam={this.props.selectedParam}\r\n            />\r\n          </div>\r\n        </div>\r\n      </header>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport Style from '../styles/Countries.module.css';\r\n\r\nexport default class CountriesList extends React.Component {\r\n  liClickHandler(el) {\r\n    let propSlug = null;\r\n    if(this.props.selectedCountry && this.props.selectedCountry.Slug) \r\n      propSlug = this.props.selectedCountry.Slug;\r\n    else \r\n      propSlug = '';\r\n    if(el.Slug !== propSlug){\r\n      this.props.updateCountry(el.Country);\r\n    }\r\n    else {\r\n      this.props.updateCountry('Весь мир');\r\n    }\r\n  }\r\n\r\n  createLi() {\r\n    const countries = this.props.countries;\r\n    return countries.map((el) => {\r\n      const flag = `https://www.countryflags.io/${el.CountryCode}/flat/16.png`;\r\n      const alt = `${el.Country} flag`;\r\n      const selectedSlug = this.props.selectedCountry ? this.props.selectedCountry.Slug : 'none';\r\n      return <li\r\n        className={`list-group-element ${el.Slug === selectedSlug ? Style.active : ''}`}\r\n        key={el.Slug}\r\n        onClick={() => this.liClickHandler(el)}\r\n      >\r\n        <h6 className={Style.smallHeader}>\r\n          <img src={flag} alt={alt}></img>\r\n          {el.Country}\r\n          &nbsp;\r\n          <span className=\"text-danger\">\r\n            {\r\n              this.props.per100\r\n                ? this.props.per100Fn(el.Country, el[this.props.selectedParam.dataKey])\r\n                : el[this.props.selectedParam.dataKey]\r\n            }\r\n          </span>\r\n        </h6>\r\n      </li>;\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (<ul className={`${Style.overflow} list-group`}>\r\n          {this.createLi()}\r\n        </ul>);\r\n  }\r\n}","export default __webpack_public_path__ + \"static/media/tofullscreen.cd04df6c.svg\";","export default __webpack_public_path__ + \"static/media/minimize.3a0d61f7.svg\";","import React from 'react';\r\nimport ToFullScreen from '../assets/images/tofullscreen.svg';\r\nimport Minimize from '../assets/images/minimize.svg';\r\nimport Style from '../styles/FullScreen.module.css';\r\n\r\nexport default class FullScreen extends React.Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      isFullScreen: false,\r\n      rowElement: null,\r\n      className: null,\r\n    }\r\n  }\r\n\r\n  clickHandler(e) {\r\n    if(!this.state.rowElement) {\r\n      let rowElement = null;\r\n      let className = null;\r\n      if(e.target.closest('.col-2')){\r\n        rowElement = e.target.closest('.col-2');\r\n        className = 'col-2';\r\n      } else if(e.target.closest('.col-6')) {\r\n        rowElement = e.target.closest('.col-6');\r\n        className = 'col-6';\r\n      } else if(e.target.closest('.row')) {\r\n        rowElement = e.target.closest('.row');\r\n        className = 'row';\r\n      }\r\n      this.setState({\r\n        rowElement,\r\n        className,\r\n       }, this.changeClass());\r\n    } else {\r\n      this.changeClass();\r\n    }\r\n  }\r\n\r\n  changeClass(){\r\n    if(this.state.rowElement) {\r\n      this.state.rowElement.classList.toggle(this.state.className);\r\n      if(this.state.className.startsWith('col')){\r\n        this.state.rowElement.classList.toggle('position-relative');\r\n      }\r\n      this.state.rowElement.classList.toggle('full-screen');\r\n      const isFullScreen = !this.state.isFullScreen;\r\n      this.setState({ isFullScreen });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const el = this.state.isFullScreen ?\r\n      <img src={Minimize} alt=\"minimize screen\" className={Style.icon} onClick={(e)=>this.clickHandler(e)} /> :\r\n      <img src={ToFullScreen} alt=\"to full screen\" className={Style.icon} onClick={(e)=>this.clickHandler(e)} />;\r\n    return el;\r\n  }\r\n}","import React from 'react';\r\nimport CountriesList from './CountriesList';\r\nimport Style from '../styles/Countries.module.css';\r\nimport FullScreen from './FullScreen';\r\nexport default class Countries extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      searchString: '',\r\n    };\r\n    this.searchHandler = this.searchHandler.bind(this);\r\n  }\r\n\r\n  sortData() {\r\n    const key = this.props.selectedParam.dataKey;\r\n    const sortParam = key ? key : this.props.selectedParam.key;\r\n    const sortFn = (a, b) => {\r\n      const aVal = this.props.per100\r\n        ? this.props.per100Fn(a.Country, a[sortParam])\r\n        : a[sortParam];\r\n      const bVal = this.props.per100\r\n        ? this.props.per100Fn(b.Country, b[sortParam])\r\n        : b[sortParam];\r\n      return bVal - aVal;\r\n    };\r\n    const data = this.props.data.sort(sortFn);\r\n    return data.filter((el) => el.Country.toLowerCase().includes(this.state.searchString));\r\n  }\r\n\r\n  searchHandler(e) {\r\n    const searchString = e.target.value.toLowerCase();\r\n    this.setState({ searchString });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <FullScreen />\r\n        <div className={Style.h80}>\r\n          <div className={`${Style.mb6} input-group`}>\r\n            <span className=\"input-group-text\" id=\"Search\">\r\n              <i className=\"fas fa-search\" aria-hidden=\"true\"></i>\r\n            </span>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              placeholder=\"Country\"\r\n              aria-label=\"Country\"\r\n              aria-describedby=\"Search\"\r\n              onChange={this.searchHandler}\r\n              value={this.state.searchString}\r\n            />\r\n          </div>\r\n          <CountriesList\r\n            countries={this.sortData()}\r\n            selectedCountry={this.props.selectedCountry}\r\n            selectedParam={this.props.selectedParam}\r\n            updateCountry={this.props.updateCountry}\r\n            per100={this.props.per100}\r\n            per100Fn={this.props.per100Fn}\r\n          />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport FullScreen from './FullScreen';\nimport { Bar } from 'react-chartjs-2';\n\nexport default class Chart extends React.Component {\n  render() {\n    const chartData = {\n      labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n      datasets: [\n        {\n          label: this.props.label || 'cases',\n          data: this.props.values,\n          backgroundColor: 'rgba(253, 86, 2, 0.9)',\n          borderColor: 'rgba(255, 99, 132, 1)',\n          borderWidth: 0,\n        },\n      ],\n    };\n\n    const options = {\n      scales: {\n        yAxes: [\n          {\n            ticks: {\n              beginAtZero: true,\n              callback: function(value, index, values) {\n                if(value < 1000) return value;\n                else if (value < 100000) return `${value / 1_000}K`;\n                else return `${value / 1_000_000}M`;\n              },\n            },\n          },\n        ],\n        xAxes: [\n          {\n            type: 'time',\n            time: {\n                unit: 'day',\n                displayFormats: {\n                  week: 'll',\n                }\n            },\n            distribution: 'series',\n          }\n        ],\n      },\n    }\n\n    return (\n      <div>\n        <FullScreen />\n        <Bar data={chartData} options={options} />\n      </div>\n    )\n  }\n}","import React from 'react';\r\nimport FullScreen from './FullScreen';\r\n\r\nexport default class Statistics extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n\r\n    };\r\n  }\r\n\r\n  statisticTable() {\r\n    if(this.props.statisticValues){\r\n      const prefix = this.props.period === 'all' ? 'Total' : 'New';\r\n      const keys = Object.keys(this.props.statisticValues).filter((el) => el.startsWith(prefix));\r\n      const nameKeys = keys.map(el => el.slice(prefix.length));\r\n      const rows = keys.map((key, idx) => <tr key={key}>\r\n        <th scope=\"col\">{this.props.params[nameKeys[idx]]}</th>\r\n        <th scope=\"col\">{this.props.statisticValues[key]}</th>\r\n      </tr>);\r\n      return <table className=\"table\">\r\n        <tbody>\r\n          {rows}\r\n        </tbody>\r\n      </table>\r\n    }\r\n    return <h4>Нет данных</h4>;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col\">\r\n        <FullScreen />\r\n        <h4>Статистика {this.props.country.Country || this.props.country}</h4>\r\n        {this.statisticTable()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { useEffect } from 'react';\r\nimport { useMap } from 'react-leaflet';\r\nimport L from 'leaflet';\r\n\r\nconst getColor = d => {\r\n  if(d === 10) return '#008500';\r\n  if(d === 40) return '#FFFF00';\r\n  if(d === 70) return '#FF9200';\r\n  if(d === 100) return '#FF0000';\r\n};\r\n\r\nconst MapLegend = () => {\r\n  const map = useMap();\r\n\r\n  useEffect(() => {\r\n    const legend = L.control({ position: 'bottomright' });\r\n\r\n    legend.onAdd = () => {\r\n      const div = L.DomUtil.create('div', 'info legend');\r\n      const grades = [0, 10, 40, 70, 100];\r\n      let labels = [];\r\n      let from;\r\n      let to;\r\n\r\n      for (let i = 0; i < grades.length - 1; i++) {\r\n        from = grades[i];\r\n        to = grades[i + 1];\r\n\r\n        labels.push(\r\n          '<i style=\"background:' +\r\n            getColor(to) +\r\n            '\"></i> ' +\r\n            from +\r\n            \"&ndash;\" +\r\n            to +\r\n            '%'\r\n        );\r\n      }\r\n\r\n      div.innerHTML = labels.join(\"<br>\");\r\n      return div;\r\n    }\r\n    legend.addTo(map);\r\n  }, [map]);\r\n  return null;\r\n}\r\n\r\nexport default MapLegend;","import React from 'react';\r\nimport { GeoJSON, MapContainer } from 'react-leaflet';\r\nimport WorldData from 'geojson-world-map';\r\nimport MapLegend from './MapLegend';\r\nimport FullScreen from './FullScreen';\r\n\r\nimport 'leaflet/dist/leaflet.css';\r\n\r\nexport default class Map extends React.Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      colors:{\r\n        none: {\r\n          color: '#4a83ec',\r\n          weight: 0.5,\r\n          fillColor: \"#008500\",\r\n          fillOpacity: 1,\r\n        },\r\n        low: {\r\n          color: '#4a83ec',\r\n          weight: 0.5,\r\n          fillColor: \"#FFFF00\",\r\n          fillOpacity: 1,\r\n        },\r\n        medium: {\r\n          color: '#4a83ec',\r\n          weight: 0.5,\r\n          fillColor: \"#FF9200\",\r\n          fillOpacity: 1,\r\n        },\r\n        high: {\r\n          color: '#4a83ec',\r\n          weight: 0.5,\r\n          fillColor: \"#FF0000\",\r\n          fillOpacity: 1,\r\n        },\r\n      },\r\n    };\r\n  }\r\n\r\n  tooltipShow(e) {\r\n    const layer = e.layer;\r\n    const toolTipVal = `\r\n      <h5>${layer.feature.properties.name}</h5>\r\n      <h6>${layer.feature.properties.cases || ''} ${layer.feature.properties.paramName || ''}</h6>\r\n    `;\r\n    layer.bindTooltip(toolTipVal).openTooltip();\r\n    layer.feature.geometry.style = {\r\n      color: 'black',\r\n      weight: 0.5,\r\n      fillColor: \"red\",\r\n      fillOpacity: 1,\r\n    }\r\n  }\r\n\r\n  clickToFeature(e) {\r\n    const layer = e.layer;\r\n    this.props.updateCountry(layer.feature.properties.name);\r\n  }\r\n\r\n  mapHandlers() {\r\n    return {\r\n      click: (e) => this.clickToFeature(e),\r\n      mouseover: (e) => this.tooltipShow(e),\r\n    }\r\n  }\r\n\r\n  featureStyle(feature) {\r\n    const flow = [ 'none', 'low', 'medium', 'high'];\r\n    const scaleValues = this.props.scaleValues;\r\n    for(let scaleParamIdx = 0; scaleParamIdx < flow.length; scaleParamIdx++) {\r\n      const cases = feature.properties.cases;\r\n      const currentScaleName = flow[scaleParamIdx];\r\n      const previousScaleName = flow[scaleParamIdx - 1];\r\n      if(scaleParamIdx === 0 && cases < scaleValues.none) return this.state.colors.none;\r\n      if(scaleParamIdx === flow.length - 1 && cases >= scaleValues.high) return this.state.colors.high;\r\n      if(scaleValues[previousScaleName] > cases && cases <= scaleValues[currentScaleName]) return this.state.colors[currentScaleName];\r\n    }\r\n    return {\r\n      color: '#4a83ec',\r\n      weight: 0.5,\r\n      fillColor: \"#1a1d62\",\r\n      fillOpacity: 1,\r\n    };\r\n  }\r\n\r\n  getGeoJson() {\r\n    const countryNames = {\r\n      'United States': 'United States of America',\r\n      'Czech Rep.': 'Czech Republic',\r\n      'Bosnia and Herz.': 'Bosnia and Herzegovina',\r\n      'W. Sahara': 'Western Sahara',\r\n      'S. Sudan': 'South Sudan',\r\n      'Central African Rep.': 'Central African Republic',\r\n      'Eq. Guinea': 'Equatorial Guinea',\r\n      'São Tomé and Principe': 'Sao Tome and Principe',\r\n      'Congo': 'Congo (Brazzaville)',\r\n      'Dem. Rep. Congo': 'Congo (Kinshasa)',\r\n      'Falkland Is.': 'Falkland Islands (Malvinas)',\r\n      'Korea': 'Korea (North)',\r\n      'Dem. Rep. Korea': 'Korea (South)',\r\n      'Solomon Is.': 'Solomon Islands',\r\n    };\r\n    const countryNamesArr = Object.keys(countryNames);\r\n    if(!Array.isArray(this.props.markers) || this.props.markers.length === 0){\r\n      return WorldData;\r\n    }\r\n    WorldData.features.forEach(feature => {\r\n      const marker = this.props.markers.find(marker => {\r\n        let propName = countryNamesArr.includes(feature.properties.name)\r\n          ? countryNames[feature.properties.name]\r\n          : feature.properties.name;\r\n        const slugEquals = marker.countrySlug.toLowerCase() === propName.toLowerCase();\r\n        const nameEquals = marker.countryName.toLowerCase() === propName.toLowerCase();\r\n        return slugEquals || nameEquals;\r\n      })\r\n      if(!marker) return;\r\n      feature.properties.cases = marker.value;\r\n      feature.properties.paramName = marker.paramName;\r\n    });\r\n    return WorldData;\r\n  }\r\n\r\n  render() {\r\n    const containerStyle = {\r\n      height: '100%',\r\n      position: 'relative',\r\n      minHeight: '65vh',\r\n      width: '100%',\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <FullScreen />\r\n        <MapContainer\r\n          center={[51.505, -0.09]}\r\n          zoom={0}\r\n          style={containerStyle}\r\n        >\r\n          <GeoJSON\r\n            data={this.getGeoJson()}\r\n            style={(e) => this.featureStyle(e)}\r\n            eventHandlers={this.mapHandlers()}\r\n            key={`_${Math.random().toString(36).substr(2, 9)}`}\r\n          >\r\n          </GeoJSON>\r\n          <MapLegend />\r\n        </MapContainer>\r\n      </>\r\n    );\r\n  }\r\n}","export default __webpack_public_path__ + \"static/media/iconmonstr-github-1.04be58c1.svg\";","export default __webpack_public_path__ + \"static/media/rs_school_js.ad178c0d.svg\";","import React from 'react';\r\nimport Style from '../styles/Footer.module.css';\r\nimport GitHubIcon from '../assets/images/iconmonstr-github-1.svg';\r\nimport RSSIcon from '../assets/images/rs_school_js.svg';\r\n\r\nexport default class Footer extends React.Component {\r\n  render() {\r\n    return (\r\n      <footer className={`${Style.footer} bg-light`}>\r\n        <div className=\"container\">\r\n          <ul className={Style.links}>\r\n            <li className={Style.link}>\r\n              <a href=\"https://github.com/clancyGruver\">\r\n                <img className={Style.githubImg} src={GitHubIcon} alt=\"github\" />\r\n              </a>\r\n            </li>\r\n            <li className={Style.link}>\r\n              <strong>2020</strong>\r\n            </li>\r\n            <li className={Style.link}>\r\n              <a href=\"https://rs.school/js/\">\r\n                <img className={Style.rssImg} src={RSSIcon} alt=\"rs school\" />\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n    </footer>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport Header from './components/Header';\r\nimport Countries from './components/Countries';\r\nimport Chart from './components/Chart';\r\nimport Statistics from './components/Statistics';\r\nimport Map from './components/Map';\r\nimport Footer from './components/Footer';\r\n\r\nexport default class App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      url: 'https://api.covid19api.com/',\r\n      periods: {\r\n        0: {\r\n          name: 'all',\r\n          description: 'весь период',\r\n        },\r\n        1: {\r\n          name: 'lastDay',\r\n          description: 'последний день',\r\n        },\r\n      },\r\n      currentPeriod: 0,\r\n      peopleValues:{\r\n        0: {\r\n          name: 'abs',\r\n          description: 'абсолютные показатели',\r\n        },\r\n        1: {\r\n          name: '100',\r\n          description: 'на 100 тыс.',\r\n        },\r\n      },\r\n      currentPeopleValue:0,\r\n      countries: [],\r\n      covidData: null,\r\n      country: 'Весь мир',\r\n      statisticValues: null,\r\n      population: null,\r\n      selectedParam: {\r\n        dataKey: 'TotalConfirmed',\r\n        appKey: 'Confirmed',\r\n        name: 'подтверждено',\r\n      },\r\n      params: {\r\n        Confirmed: 'подтверждено',\r\n        Deaths: 'умерло',\r\n        Recovered: 'выздоровело',\r\n      },\r\n      peopleVal: 'abs',\r\n      date: new Date(),\r\n      graphValues: [],\r\n      worldChartData: [],\r\n      mapData: [],\r\n      scaleValues: {\r\n        none: 0, // 10%\r\n        low: 0, // 30%\r\n        medium: 0, //30%\r\n        high: 0, // 30%\r\n      },\r\n    };\r\n    this.updateCountry = this.updateCountry.bind(this);\r\n    this.setShowingParam = this.setShowingParam.bind(this);\r\n    this.peopleChange = this.peopleChange.bind(this);\r\n    this.periodChange = this.periodChange.bind(this);\r\n    this.per100 = this.per100.bind(this);\r\n  }\r\n\r\n  peopleChange() {\r\n    const currentPeopleValue = Number(!Boolean(this.state.currentPeopleValue));\r\n    this.setState({ currentPeopleValue }, () => this.updateData());\r\n  }\r\n\r\n  periodChange() {\r\n    const currentPeriod = Number(!Boolean(this.state.currentPeriod));\r\n    this.setState({ currentPeriod }, () => {\r\n      this.setShowingParam(this.state.selectedParam.appKey);\r\n      this.updateData()\r\n    });\r\n  }\r\n\r\n  updateCountry(countryName) {\r\n    const country = this.state.countries.find(country => {\r\n      const slugEquals = country.Slug.toLowerCase() === countryName.toLowerCase();\r\n      const nameEquals = country.Country.toLowerCase() === countryName.toLowerCase();\r\n      return slugEquals || nameEquals;\r\n    }) || 'Весь мир';\r\n    this.setState({ country }, () => this.updateData());\r\n  }\r\n\r\n  setShowingParam(key) {\r\n    const paramKey = `${this.state.currentPeriod === 0 ? 'Total' : 'New'}${key}`;\r\n    this.setState({\r\n      selectedParam: {\r\n        dataKey: paramKey,\r\n        appKey: key,\r\n        name: this.state.params[key],\r\n      }\r\n    }, () => this.updateData());\r\n  }\r\n\r\n  updateData() {\r\n    this.updateStatisticData();\r\n    this.updateChartData();\r\n    this.updateMapData();\r\n  }\r\n\r\n  per100(countryName, cases) {\r\n    const peopleCount = this.state.population.find((el) => el.name === countryName);\r\n    const population = peopleCount ? peopleCount.population : 7.8 * (10 ** 9);\r\n    return (cases / population * 100_000).toFixed(2);\r\n  }\r\n\r\n  getCaseValues(minMaxCases) {\r\n    const values = {\r\n      none: 0, // 10%\r\n      low: 0, // 30%\r\n      medium: 0, //30%\r\n      high: 0, // 30%\r\n    };\r\n    const onePercent = (minMaxCases.max - minMaxCases.min) / 100;\r\n    values.none = Math.floor(minMaxCases.min + onePercent * 10);\r\n    values.low = Math.round(minMaxCases.min + onePercent * 40);\r\n    values.medium = Math.round(minMaxCases.min + onePercent * 70);\r\n    values.high = minMaxCases.max;\r\n    return values;\r\n  }\r\n\r\n  updateMapData() {\r\n    const localCountries = this.state.countries;\r\n    const minMaxCases = {\r\n      min: 0,\r\n      max: 0,\r\n    };\r\n    const mapData = localCountries.map(country => {\r\n      let cases = country[this.state.selectedParam.dataKey];\r\n      cases = this.state.currentPeopleValue === 1 ? this.per100(country.Country, cases) : cases\r\n      if (cases < minMaxCases.min) minMaxCases.min = cases;\r\n      if (cases > minMaxCases.max) minMaxCases.max = cases;\r\n      const marker = {\r\n        value: cases,\r\n        countryName: country.Country,\r\n        countrySlug: country.Slug,\r\n        paramName: this.state.selectedParam.name,\r\n      };\r\n      this.state.population.find((el) => el.name === this.state.country.Country);\r\n      return marker;\r\n    });\r\n\r\n    this.setState({\r\n      mapData,\r\n      scaleValues: this.getCaseValues(minMaxCases),\r\n    })\r\n  }\r\n\r\n  async updateChartData() {\r\n    let chartData = null;\r\n    let paramKey = null;\r\n    let sortFunction = null;\r\n    if (typeof this.state.country === 'object') {\r\n      chartData = await this.loadCountryChartData(this.state.country.Slug);\r\n      paramKey = 'Cases';\r\n      sortFunction = (a, b) => new Date(Date.parse(a.Date)) - new Date(Date.parse(b.Date));\r\n    } else if (typeof this.state.country === 'string') {\r\n      chartData = JSON.parse(JSON.stringify(this.state.worldChartData));\r\n      paramKey = this.state.selectedParam.dataKey;\r\n      sortFunction = (a, b) => a[paramKey] - b[paramKey];\r\n    }\r\n\r\n    let peopleCount = null;\r\n    let population = null;\r\n    if (this.state.currentPeopleValue === 1) {\r\n      peopleCount = this.state.population.find((el) => el.name === this.state.country.Country);\r\n      population = peopleCount ? peopleCount.population : 7.8 * (10 ** 9);\r\n    }\r\n    \r\n    const date = new Date(Date.parse(chartData[0].Date || chartData[0].date));\r\n    const to100 = (cases) => (cases / population * 100_000).toFixed(2);\r\n    this.setState({\r\n      graphValues: chartData\r\n        .sort(sortFunction)\r\n        .map(el => {\r\n          const chartVal = {\r\n            x: new Date(date.getTime()),\r\n            y: this.state.currentPeopleValue === 0 ? el[paramKey] : to100(el[paramKey]),\r\n          };\r\n          date.setDate(date.getDate() + 1);\r\n          return chartVal;\r\n        }),\r\n    })\r\n  }\r\n  \r\n  updateStatisticData() {\r\n    let countryData = null;\r\n    if (typeof this.state.country === 'object') { \r\n      countryData = this.state.countries.find((el) => el.CountryCode === this.state.country.CountryCode);\r\n    } else if (typeof this.state.country === 'string') {\r\n      countryData = this.state.summaryData.Global;\r\n      countryData.Date = this.state.summaryData.Date;\r\n    }\r\n    this.setState({ date: new Date(countryData.Date) });\r\n    if (this.state.currentPeopleValue === 1) {\r\n      const keyPrefix = this.state.currentPeriod === 0 ? 'Total' : 'New';\r\n      const keys = Object.keys(this.state.params);\r\n      const res = {};\r\n      const countryName = this.state.country.Country;\r\n      keys.forEach((key) => {\r\n        const cases = countryData[`${keyPrefix}${key}`];\r\n        res[`${keyPrefix}${key}`] = this.per100(countryName, cases);\r\n      });\r\n      this.setState({ statisticValues: res});\r\n    } else if (this.state.currentPeopleValue === 0) {\r\n      this.setState({ statisticValues: countryData });\r\n    }\r\n  }\r\n\r\n  async loadCountryChartData(slug) {\r\n    const url = `${this.state.url}dayone/country/${slug}/status/${this.state.selectedParam.appKey.toLowerCase()}`;\r\n    const response = await fetch(url, {mode: 'cors',});\r\n    const result = await response.json();\r\n    if (this.state.currentPeriod === 0) return result;\r\n    return result.map((el, idx) => {\r\n      const res = {\r\n        Date: el.Date,\r\n        Cases: el.Cases,\r\n      };\r\n      if (idx === 0) return res;\r\n      res.Cases = res.Cases - result[idx - 1].Cases;\r\n      return res;\r\n    })\r\n  }\r\n\r\n  async loadPopulation() {\r\n    const url = 'https://restcountries.eu/rest/v2/all?fields=name;population';\r\n    const response = await fetch(url, {mode: 'cors',});\r\n    const population = await response.json();\r\n    this.setState({ population });\r\n  }\r\n\r\n  async loadWorldData(){\r\n    const path = 'world';\r\n    const endDate = new Date();\r\n    const startDate = new Date(2020, 3, 14);\r\n    const url = `${this.state.url}${path}?from=${startDate.toISOString()}&to=${endDate.toISOString()}`;\r\n    const response = await fetch(url, {mode: 'cors',});\r\n    let worldData = await response.json();\r\n    const date = startDate;\r\n    const paramKey = this.state.selectedParam.dataKey;\r\n    worldData = worldData\r\n      .sort((a, b) => a[paramKey] - b[paramKey])\r\n      .map(el => {\r\n        el.date = new Date(date.getTime());\r\n        date.setDate(date.getDate() + 1);\r\n        return el;\r\n      });\r\n    this.setState({\r\n      worldChartData: worldData,\r\n      graphValues: worldData.map(el => {\r\n        return {\r\n          x: el.date,\r\n          y: el[paramKey],\r\n        };\r\n      }),\r\n    });\r\n  }\r\n\r\n  async loadSummary() {\r\n    const url = `${this.state.url}summary`;\r\n    const response = await fetch(url, {mode: 'cors',});\r\n    const summaryData = await response.json();\r\n    this.setState({\r\n      summaryData,\r\n      statisticValues: summaryData.Global,\r\n      countries: summaryData.Countries,\r\n      date: new Date(summaryData.Date),\r\n    });\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.loadSummary();\r\n    await this.loadPopulation();\r\n    this.updateMapData();\r\n    this.loadWorldData();\r\n  }\r\n\r\n  render() {\r\n    const period = {\r\n      handleClick: this.periodChange,\r\n      value: this.state.currentPeriod,\r\n      description: this.state.periods[this.state.currentPeriod].description,\r\n    };\r\n    const people = {\r\n      handleClick: this.peopleChange,\r\n      value: this.state.currentPeopleValue,\r\n      description: this.state.peopleValues[this.state.currentPeopleValue].description,\r\n    };\r\n    const emptyCountries = [{\r\n      \"Country\": \"Идет загрузка\",\r\n      \"CountryCode\": \"AX\",\r\n      \"Slug\": \"ala-aland-islands\",\r\n      \"NewConfirmed\": 0,\r\n      \"TotalConfirmed\": 0,\r\n      \"NewDeaths\": 0,\r\n      \"TotalDeaths\": 0,\r\n      \"NewRecovered\": 0,\r\n      \"TotalRecovered\": 0,\r\n      \"Date\": \"2020-04-05T06:37:00Z\"\r\n    },];\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <Header\r\n            date={this.state.date}\r\n            period={period}\r\n            people={people}\r\n            params={this.state.params}\r\n            selectedParam={this.state.selectedParam}\r\n            setShowingParam={this.setShowingParam}\r\n          />\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-2 position-relative\">\r\n            <Countries\r\n              data={this.state.summaryData && this.state.summaryData.Countries ? this.state.summaryData.Countries : emptyCountries}\r\n              selectedCountry={this.state.country}\r\n              selectedParam={this.state.selectedParam}\r\n              updateCountry={this.updateCountry}\r\n              per100={this.state.currentPeopleValue}\r\n              per100Fn={this.per100}\r\n            />\r\n          </div>\r\n          <div className=\"col-6 position-relative\">\r\n            <Map\r\n              markers={this.state.mapData || this.state.countries}\r\n              updateCountry={this.updateCountry}\r\n              scaleValues={this.state.scaleValues}\r\n            />\r\n          </div>\r\n          <div className=\"col-4\">\r\n            <div className=\"row\">\r\n              <Statistics\r\n                country={this.state.country}\r\n                statisticValues={this.state.statisticValues}\r\n                params={this.state.params}\r\n                period={this.state.periods[this.state.currentPeriod].name}\r\n              />\r\n            </div>\r\n            <div className=\"row\">\r\n              <Chart\r\n                values={this.state.graphValues}\r\n                label={this.state.selectedParam.name}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <Footer />\r\n        </div>\r\n      </div>\r\n    )\r\n  };\r\n}\r\n","import React from 'react';\nimport { render } from 'react-dom';\nimport App from './App';\n\nrender(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formCheckInputCustom\":\"Switch_formCheckInputCustom__scu-B\",\"pl0\":\"Switch_pl0__2HSOW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon\":\"Header_icon__EIn6x\",\"headerSwitchers\":\"Header_headerSwitchers__Tj9E_\",\"headerCustom\":\"Header_headerCustom__23Fjh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon\":\"FullScreen_icon__2Wjxz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wa\":\"ParamSelect_wa__1CoeG\"};"],"sourceRoot":""}